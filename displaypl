<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="">

  <title>Hour of Power</title>

     <!-- jQuery -->
  <script src="js/jquery.js"></script>
  <script src="js/jquery-ui.min.js"></script>
  <script src="js/lodash.js"></script>

  <!-- Bootstrap Core JavaScript -->
  <script src="js/bootstrap.min.js"></script>

  <!-- Plugin JavaScript -->
  <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>
  <script src="js/classie.js"></script>
 

  <!-- Contact Form JavaScript -->
  <script src="js/jqBootstrapValidation.js"></script>

  <!-- Custom Theme JavaScript -->
  <script src="js/agency.js"></script>
  <script src="js/freewall.js"></script>

  <!-- Bootstrap Core CSS -->
  <link href="css/bootstrap.min.css" rel="stylesheet">
  <!-- Custom CSS -->
  <link href="css/agency.css" rel="stylesheet">
  <link href="css/frewall.css">
  <link href="toastr/toastr-master/toastr.css" rel = "stylesheet"/>

  <!-- Custom Fonts -->
  <link href="font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
  <link href="http://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">
  <link href='http://fonts.googleapis.com/css?family=Kaushan+Script' rel='stylesheet' type='text/css'>
  <link href='http://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
  <link href='http://fonts.googleapis.com/css?family=Roboto+Slab:400,100,300,700' rel='stylesheet' type='text/css'>

  <script src = "toastr/toastr-master/toastr.js"></script>

</head>

<body id="page-top" class="index">

  <!-- Navigation -->
<nav class="navbar navbar-default navbar-fixed-top navbar-shrink">
		<div class="container">

			<!-- Brand and toggle get grouped for better mobile display -->
			<div class="navbar-header page-scroll">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
					<span class="sr-only">Toggle navigation</span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<a class="navbar-brand page-scroll" href="./#page-top">Hour of Power</a>
			</div>

			<!-- Collect the nav links, forms, and other content for toggling -->
			<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
				<ul class="nav navbar-nav navbar-right">
					<li class="hidden">
						<a href="./#page-top"></a>
					</li>
					<li>
						<a class="page-scroll" href="./#mostpopular">Most Popular</a>
					</li>
					<li>
						<a class="page-scroll" href="./#about">About</a>
					</li>
					<!-- <li>
						<a class="page-scroll" href="./#team">Team</a>
					</li> -->
					<li>
						<a class="page-scroll" href="./#contact">Contact</a>
					</li>
					<li>
						<a class="page-scroll" href="./show.html">My List</a>
					</li>
				</ul>
				<div class="col-sm-4 col-md-4">
					<form class="navbar-form" role="search" action="results.html" method="GET" id="search_bar">
						<div class="input-group">
							<input type="text" class="form-control" placeholder="Search" name="search_query" id="query">
							<div class="input-group-btn">
								<button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
							</div>
						</div>
					</form>
				</div>
			</div>
			<!-- /.navbar-collapse -->
		</div>
		<!-- /.container-fluid -->
	</nav>

<section id="playlist">
	<div class="container">
		<div class="col-lg-12 text-center">
		<h2 class="section-heading" id="playlist-title"></h2>
		<h3 class="section-subheading text-muted">Click the videos you don't want to see and when you're ready click the "Add Videos" button</h3>
		<h3 class="text-muted" id = 'numVideos'></h3>
	</div>
	<div style='text-align: center;'>
		<button id="addVids" class="btn btn-default">
			<span class="glyphicon glyphicon-plus"></span>Add
		</button>
		<button id="myList" class="btn btn-default">
			<span class="glyphicon glyphicon-list"></span>My List
		</button>
		<button id="play" class="btn btn-default">
			<span class="glyphicon glyphicon-play"></span>Play
		</button>
	</div>
		<div class="row" id="search-results">

      </div>
	</div>
</section>


</body>

  <script type="text/javascript">
		// Variables to hold videoIds and the playlistId
		var videoIds = [];
		var addedVideos = [];
		var myPlaylist;

		var playlistId = getQueryVariable("plist");
		if(!playlistId) {
			window.location.replace("index.php");
		}
		
		function onClientLoad() {
			gapi.client.setApiKey('AIzaSyCR5In4DZaTP6IEZQ0r1JceuvluJRzQNLE');
			gapi.client.load('youtube', 'v3', onYouTubeApiLoad);
		}


		function onYouTubeApiLoad() {
			findPlaylistInDB(playlistId);
			$(document).ready(function(){
			 	$("#myList").click(function(){
			 		window.location.assign("show.html");
			 	});

			 	$("#addVids").click(function(){

			 		if (sessionStorage.getItem('myPlaylist') == null)
			 		{
			 			myPlaylist = {videos:[]};
			 			sessionStorage.setItem('myPlaylist', JSON.stringify(myPlaylist));
			 		}
			 		
		 			var myPlaylist = JSON.parse(sessionStorage.getItem('myPlaylist'));
		 			for(i = 0; i<addedVideos.length; i++){
		 				myPlaylist.videos.push(addedVideos[i]);
		 			}
		 			sessionStorage.setItem('videoIds', JSON.stringify(previousVids));

			 		var children = $("#search-results").children();
			 		//console.log("Number of Children: " + children.length);
			 		for(j = 0; j<children.length; j++){
			 			var child = children[j];
			 			var className = child.querySelector("#transbox-type").className;
			 			//console.log(className);
			 			if(className == 'PLtransbox'){
			 				//console.log("match");
			 				child.querySelector("#transbox-type").className = 'PLtransbox-keep';
			 				child.querySelector("#transbox-image").className = "glyphicon glyphicon-ok-circle";
			 			}
			 		}
			 	});

				$("#play").click(function(){
					document.getElementById("addVids").click();
					var numVids = JSON.parse(sessionStorage.getItem('videoIds')).length;
					if(numVids > 59){
					window.location.assign("play.html");
					} else{
						makeNotEnoughVideosToast(numVids);
					}
				});

			 });
		}

		function autoAdd(){
			console.log("autoAdd called");
			var need = 60 - JSON.parse(sessionStorage.getItem('videoIds')).length;
			var plid = "PL8A83124F1D79BD4F";
			$.ajax({
				type: 'POST',
				url: './php/getplaylist.php',
				data: {playlistid: plid},
				success: function(data) { 
					parseAutoResults(data, need); 
				}
			});
		}

		function parseAutoResults(data, need){
			var tmp = data.split("<br>");
			tmp.pop();
			var storedIds = JSON.parse(sessionStorage.getItem('videoIds'));
			console.log("real need: " + need);
			need *= 2;
			console.log("Program need: " + need);
			for(var i=0; i<need; i+=2) {
				storedIds.push(tmp[i]);
			}
			console.log("new number of videos: " + storedIds.length);
			sessionStorage.setItem('videoIds', JSON.stringify(storedIds));
			window.location.assign('show.html');
		}
		
		// If the playlist is in the database, pull from the db otherwise pull from youtube and add to the database
		function findPlaylistInDB(plistId) {
			$.ajax({
				type: 'POST',
				url: './php/findplaylist.php',
				data: {playlistid: plistId},
				success: function(data) { 
					//console.log(data); 
					if(data) { 
						console.log("db"); 
						var tmp = data.split("<br>");
						displayPlaylistTitle(tmp[0]); 
						displayPlaylistCount(tmp[1]);
						requestPlaylistFromDB(plistId); 
					} else { 
						console.log("youtube"); 
						requestPlaylistFromYoutube(plistId); 
					} 
				}
			});
		}
					
		function requestPlaylistFromDB(plistId) {
			$.ajax({
				type: 'POST',
				url: './php/getplaylist.php',
				data: {playlistid: plistId},
				success: function(data) { 
					//console.log(data);
					parseResults(data, plistId); }
			});
		}
		
		function parseResults(data, plistId) {
			var tmp = data.split("<br>");
			tmp.pop();
			
			for(var i=0; i<tmp.length; i+=2) {
				videoIds.push(tmp[i]);
				displayResult(tmp[i+1], tmp[i]);
			}
			//playlistLoaded();
		}
		
		function displayPlaylistTitle(title, length) {
			//$("#playlist-detail-container").append("<h1> " + title + "</h1><h2>" + length + " videos</h2>");
			$("#playlist-title").append(title);
		}

		function displayPlaylistCount(length){
			$("#numVideos").append("<small id = 'dynamNum'>" + length + " videos in this list</small>");
		}


		function fade(el){
			var vId = $(el).attr('id');
			var child = $(el).children()[0];
			var initClass = child.className;
			//console.log(initClass);
			//console.log("length on click: "+videoIds.length);
			if (initClass == "PLtransbox"){
				var ind = videoIds.indexOf(vId);
				videoIds.splice(ind,1);
				//console.log("one removed: "+ videoIds.length);
				child.className = "PLtransbox-discard";
			}else {
				videoIds.push(vId);
				//console.log("one added: " + videoIds.length);
				child.className = "PLtransbox";
			}
			document.getElementById('dynamNum').innerHTML = videoIds.length + " Videos";
		}

		function displayResult(title, id) {


			var thumbnail_url = "http://img.youtube.com/vi/" + id + "/default.jpg";

			var videoObj = {id:id, image:thumbnail_url, title:title};
			addedVideos.push(videoObj);

			var thumb = "<div class='col-sm-6 portfolio-item'>";
			thumb += "<div class='caption'><div class='caption-content'>";
			thumb += "</div></div>";
			thumb += "<div style='display:inline;'>"
			thumb += "<p class='text-primary' style='white-space: pre-wrap;'>";
			thumb += title + "</p>";
			thumb += "<div class = 'PLthumb' onclick='javascript:fade(this)' id = " + id + " style='cursor:pointer; background: url("+thumbnail_url+");'>";
			thumb += "<div id = 'transbox-type' class = 'PLtransbox'><span id = 'transbox-image' class='glyphicon glyphicon-remove-circle'></span></div></div>";
			//thumb += "</p>";
			thumb += "</div></div>"
			$("#search-results").append(thumb);

		}
		

		
		function shuffle(array) {
			var currentIndex = array.length, temporaryValue, randomIndex ;

			// While there remain elements to shuffle...
			while (0 !== currentIndex) {

				// Pick a remaining element...
				randomIndex = Math.floor(Math.random() * currentIndex);
				currentIndex -= 1;

				// And swap it with the current element.
				temporaryValue = array[currentIndex];
				array[currentIndex] = array[randomIndex];
				array[randomIndex] = temporaryValue;
			}

			return array;
		}
					
		function requestPlaylistFromYoutube(playlistId, pageToken) {
			// Only get the videoIds and the nextpage token
			var requestOptions = {
				playlistId: playlistId,
				part: 'snippet',
				fields: 'items/snippet/channelTitle,items/snippet/title,items/snippet/resourceId/videoId,nextPageToken',
				maxResults: 50
			};
			
			// If there is a pageToken, add it to the request options
			if (pageToken) {
				requestOptions.pageToken = pageToken;
			}
			
			// Formulate and execute the api request
			var request = gapi.client.youtube.playlistItems.list(requestOptions);
			request.execute(function(response) {
				var ids = [];
				var titles = [];
				
				for(var i=0; i<response.items.length; ++i) {
					if(response.items[i].snippet.title && response.items[i].snippet.title != 'Private video') {
						var id = response.items[i].snippet.resourceId.videoId;
						var title = response.items[i].snippet.title;
						ids.push(id);
						titles.push(title);
						displayResult(response.items[i].snippet.title, id);
					}	
				}
				
				// Append the videoIds to the complete videoIds array
				videoIds = videoIds.concat(ids);
				
				// Start getting metadata of the retrieved videoIds
				storeMetadata(ids, titles, playlistId);
				
				nextPageToken = response.result.nextPageToken;
				// If there is another page of results, retrieve it
				if(nextPageToken) {
					requestPlaylistFromYoutube(playlistId, nextPageToken);
				}
				// If all videoIds have been retrieved, then store them in session storage
				else {
					requestOptions = {
						id: playlistId,
						part: 'snippet',
						//fields: 'items/snippet/channelTitle,items/snippet/title,items/snippet/resourceId/videoId,nextPageToken',
					};
					request = gapi.client.youtube.playlists.list(requestOptions);
					request.execute(function(response) {
						//console.log(response);
						displayPlaylistTitle(response.items[0].snippet.title);
						displayPlaylistCount(videoIds.length);
						var q = Math.floor(videoIds.length/4);
						storePlaylist(playlistId, response.items[0].snippet.title, videoIds[0], videoIds[q], videoIds[2*q], videoIds[3*q], videoIds.length); 
						//playlistLoaded();
					});				
				}
			});
		}
		
		function storePlaylist(plistId, t, v1, v2, v3, v4, len) {
			$.ajax({
				type: 'POST',
				url: './php/storeplaylist.php',
				data: {playlistid: plistId, title: t, vid1: v1, vid2: v2, vid3: v3, vid4: v4, length: len},
				success: function(data) { console.log(data); },
			});
		}

		// pass the videoIds and the playlistId to the "storemetadata.php" script
		function storeMetadata(ids, titles, plistId) {
			$.ajax({
				type: 'POST',
				url: './php/storemetadata.php',
				data: {ids: ids, playlistid: plistId, metadata: titles},
				success: function(data) { console.log(data); },
			});
		}
		
		function getQueryVariable(variable)
		{
			var query = window.location.search.substring(1);
			var vars = query.split("&");
			for (var i=0;i<vars.length;i++) {
				var pair = vars[i].split("=");
				if(pair[0] == variable){return pair[1];}
			}
			return(false);
		}

		function makeNotEnoughVideosToast(numVids){

			var autoButton = "<div><button class='btn btn-default' id='autoAdd' onclick='javascript:autoAdd()'>Yes!</button>";
			var customButton = "<button class='btn btn-default'>No! I'll do it</button></div>";
			var msg = "You only have "+numVids+" videos in your list. Would you like us to finish your list?\t" + autoButton + customButton;

			toastr.options = {
				"closeButton": true,
				"debug": false,
				"newestOnTop": false,
				"progressBar": false,
				"positionClass": "toast-top-full-width",
				"preventDuplicates": false,
				"onclick": null,
				"showDuration": "300",
				"hideDuration": "1000",
				"timeOut": 0,
				"extendedTimeOut": 0,
				"showEasing": "swing",
				"hideEasing": "linear",
				"showMethod": "fadeIn",
				"hideMethod": "fadeOut",
				"tapToDismiss": true,
			}

			Command: toastr["info"](msg, "Hey! You need more videos!")
		}

	</script>
	<script src="https://apis.google.com/js/client.js?onload=onClientLoad"></script>
</html>
